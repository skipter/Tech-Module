namespace NestedDictionary
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public class PrintingNestedDictionaries
    {
        public static void Main()
        {
            
            // да си представим, че имаме няколко магазина, всеки от които си има име,
            // а в магизна има продукти, като всеки продукт си има цена (в случая има само един, но това няма значение)
            
            
            var groceriesStore = new Dictionary<string, Dictionary<string, double>>();

            string storeName = "Supermarket";
           
            // добавяме си нужното инфо в магазина
            
            if (!groceriesStore.ContainsKey(storeName))
            {
                groceriesStore[storeName] = new Dictionary<string, double>();
            }
            
            groceriesStore[storeName].Add("apples", 3);
            groceriesStore[storeName].Add("bananas", 3.20);
            groceriesStore[storeName].Add("berries", 2.49);
            groceriesStore[storeName].Add("water", 1.5);
            groceriesStore[storeName].Add("rice", 1.87);
            groceriesStore[storeName].Add("chicken", 5.60);
           
            // казано ни е, че трябва да направим статистика, какви продукти са ни останали на края на деня във всеки магазин
            // и да ги изпринтираме, като ги подредим по тяхната цена, почвайки от най-високата
            
            // 1. с първия цикъл си взимаме името на магазина, по принцип не е нужно да си го пазиш в отделна променлива,
            // но с цел да стане по-ясно кое, какво е, можеш да си ги именоваш по смисъл. 
            
            // 2. за всяка една двойка продукт и цена в магазина (store.Value e вложеният речник), правим LINQ заявка 
           

            foreach (var store in groceriesStore)
            {
                var name = store.Key; // В случая name ти е името на магазина

                Console.WriteLine($"{name}:");
                
                // преди да принтира стойностите, да ни ги подреди по цена, 
                // в низходящ ред (store.Value.OrderByDescending(price => price.Value)), като казваме на втория речник
                // (store.Value), да вземе цената и да сортира по нея .OrderByDescending(price => price.Value)

                foreach (var kvp in store.Value.OrderByDescending(price => price.Value))
                {
                    string product = kvp.Key;
                    double price = kvp.Value;

                    Console.WriteLine($"Product: {product} -> Price: ${price}");
                }
            }
            
        }
    }
}


Code copy from J.A.